if(NOT @DUNE_MOD_NAME@_FOUND)
@PACKAGE_INIT@

#import the target
get_filename_component(_dir "${CMAKE_CURRENT_LIST_FILE}" PATH)
include("${_dir}/@DUNE_MOD_NAME@-targets.cmake")

#report other information
set_and_check(@DUNE_MOD_NAME@_PREFIX "${PACKAGE_PREFIX_DIR}")
set_and_check(@DUNE_MOD_NAME@_INCLUDE_DIRS "@PACKAGE_CMAKE_INSTALL_INCLUDEDIR@")
set(@DUNE_MOD_NAME@_CXX_FLAGS "@CMAKE_CXX_FLAGS@")
set(@DUNE_MOD_NAME@_CXX_FLAGS_DEBUG "@CMAKE_CXX_FLAGS_DEBUG@")
set(@DUNE_MOD_NAME@_CXX_FLAGS_MINSIZEREL "@CMAKE_CXX_FLAGS_MINSIZEREL@")
set(@DUNE_MOD_NAME@_CXX_FLAGS_RELEASE "@CMAKE_CXX_FLAGS_RELEASE@")
set(@DUNE_MOD_NAME@_CXX_FLAGS_RELWITHDEBINFO "@CMAKE_CXX_FLAGS_RELWITHDEBINFO@")
set(@DUNE_MOD_NAME@_LIBRARIES "dunecommon")
set_and_check(@DUNE_MOD_NAME@_SCRIPT_DIR "@PACKAGE_SCRIPT_DIR@")
set_and_check(DOXYSTYLE_FILE "@PACKAGE_DOXYSTYLE_DIR@/Doxystyle")
set_and_check(DOXYGENMACROS_FILE "@PACKAGE_DOXYSTYLE_DIR@/doxygen-macros")
set(@DUNE_MOD_NAME@_DEPENDS "@DUNE_DEPENDS@")
set(@DUNE_MOD_NAME@_SUGGESTS "@DUNE_SUGGESTS@")
set_and_check(@DUNE_MOD_NAME@_MODULE_PATH "@PACKAGE_DUNE_INSTALL_MODULEDIR@")

include(CMakeFindDependencyMacro)
list(APPEND CMAKE_MODULE_PATH ${@DUNE_MOD_NAME@_MODULE_PATH})

if(@LAPACK_FOUND@)
  find_dependency(LAPACK)
else()
  set(CMAKE_DISABLE_FIND_PACKAGE_LAPACK TRUE)
endif()

if(@GMP_FOUND@)
  find_dependency(GMP)
else()
  set(CMAKE_DISABLE_FIND_PACKAGE_GMP TRUE)
endif()

if(@QuadMath_FOUND@)
  find_dependency(QuadMath)
else()
  set(CMAKE_DISABLE_FIND_PACKAGE_QuadMath TRUE)
endif()

if(@Inkscape_FOUND@)
  find_dependency(Inkscape)
else()
  set(CMAKE_DISABLE_FIND_PACKAGE_Inkscape TRUE)
endif()

if(@Threads_FOUND@)
  find_dependency(Threads)
else()
  set(CMAKE_DISABLE_FIND_PACKAGE_Threads TRUE)
endif()

if(@MPI_C_FOUND@)
  enable_language(C)
  find_dependency(MPI 3.0 COMPONENTS C)
else()
  set(CMAKE_DISABLE_FIND_PACKAGE_MPI TRUE)
endif()

if(@TBB_FOUND@)
  find_dependency(TBB)
else()
  set(CMAKE_DISABLE_FIND_PACKAGE_TBB TRUE)
endif()

if(@PTScotch_FOUND@)
  find_dependency(PTScotch)
else()
  set(CMAKE_DISABLE_FIND_PACKAGE_PTScotch TRUE)
endif()

if(@METIS_FOUND@)
  find_dependency(METIS)
else()
  set(CMAKE_DISABLE_FIND_PACKAGE_METIS TRUE)
endif()

if(@ParMETIS_FOUND@)
  find_dependency(ParMETIS 4.0)
else()
  set(CMAKE_DISABLE_FIND_PACKAGE_ParMETIS TRUE)
endif()

if(@Vc_FOUND@)
  find_dependency(Vc @MINIMUM_VC_VERSION@ NO_MODULE)
else()
  set(CMAKE_DISABLE_FIND_PACKAGE_Vc TRUE)
endif()

set(LAPACK_NEEDS_UNDERLINE @LAPACK_NEEDS_UNDERLINE@ CACHE INTERNAL "")
set(HAS_ATTRIBUTE_UNUSED @HAS_ATTRIBUTE_UNUSED@ CACHE INTERNAL "")
set(HAS_ATTRIBUTE_DEPRECATED @HAS_ATTRIBUTE_DEPRECATED@ CACHE INTERNAL "")
set(HAS_ATTRIBUTE_DEPRECATED_MSG @HAS_ATTRIBUTE_DEPRECATED_MSG@ CACHE INTERNAL "")
set(DUNE_HAVE_CXX_EXPERIMENTAL_MAKE_ARRAY @DUNE_HAVE_CXX_EXPERIMENTAL_MAKE_ARRAY@ CACHE INTERNAL "")
set(DUNE_HAVE_CXX_EXPERIMENTAL_IS_DETECTED @DUNE_HAVE_CXX_EXPERIMENTAL_IS_DETECTED@ CACHE INTERNAL "")
set(DUNE_HAVE_CXX_STD_IDENTITY @DUNE_HAVE_CXX_STD_IDENTITY@ CACHE INTERNAL "")

endif(NOT @DUNE_MOD_NAME@_FOUND)
