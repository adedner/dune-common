---
include:
  - project: 'core/ci-config'
    ref: master
    file: 'config/common/master.yml'
  - project: 'core/ci-config'
    ref: master
    file: 'jobs/common/master.yml'

before_script:
  - . /duneci/bin/duneci-init-job

variables:
  DUNECI_TEST_LABELS: quick
  DUNE_TEST_EXPECTED_VC_IMPLEMENTATION: SSE2
  PIP_DEFAULT_TIMEOUT: 0
  # Note: DUNE_RUNNING_IN_CI only needed unti ci image updating fixed on gitlab
  DUNECI_CMAKE_FLAGS: '-DDUNE_RUNNING_IN_CI=TRUE'
  DUNE_LOG_LEVEL:     DEBUG

debian:10 gcc-7-17--expensive:
  extends: .common
  # This image has Vc
  image: registry.dune-project.org/docker/ci/debian:10
  # allow expensive tests
  variables:
    DUNECI_CXXFLAGS: -mavx
    DUNECI_TEST_LABELS: ""
    DUNECI_TOOLCHAIN: gcc-7-17
    DUNE_TEST_EXPECTED_VC_IMPLEMENTATION: AVX
  # require AVX to properly test Vc
  tags: [duneci, "iset:avx"]
  # allowed to fail to e.g. do no hold up a merge when a runner supporting avx
  # is unavailable
  allow_failure: true

debian-11-gcc-9-17-nopython:
  extends: .common
  image: registry.dune-project.org/docker/ci/debian:11
  variables:
    DUNECI_TOOLCHAIN:  gcc-9-17
    DUNECI_CMAKE_FLAGS: '-DCMAKE_DISABLE_FIND_PACKAGE_Python3=TRUE'

ubuntu-20.04-clang-10-20-nobindings:
  extends: .common
  image: registry.dune-project.org/docker/ci/ubuntu:20.04
  variables:
    DUNECI_TOOLCHAIN: clang-10-20
    DUNECI_CMAKE_FLAGS: '-DDUNE_ENABLE_PYTHONBINDINGS=OFF'


# incremental builds install packages step by step starting from a minimal image
.incremental:
  extends: .common
  image: registry.dune-project.org/docker/ci/ubuntu:18.04-minimal
  variables:
    DUNECI_TOOLCHAIN:  gcc-7-17

incremental-step0:
  extends: .incremental
  script:
    - dunecontrol --opts=/duneci/dune.opts --current all

incremental-step1:
  extends: .incremental
  before_script:
    - apt-get install --no-download --ignore-missing --no-install-recommends python3
  needs: ["incremental-step0"]

incremental-step2:
  extends: .incremental
  before_script:
    - apt-get install --no-download --ignore-missing --no-install-recommends python3 python3-dev
  needs: ["incremental-step1"]

incremental-step3:
  extends: .incremental
  before_script:
    - apt-get install --no-download --ignore-missing --no-install-recommends python3 python3-dev python3-venv
  needs: ["incremental-step2"]

incremental-step4:
  extends: .incremental
  before_script:
    - apt-get install --no-download --ignore-missing --no-install-recommends python3 python3-dev python3-venv python3-pip
  needs: ["incremental-step3"]


system-test:
  stage: downstream
  variables:
    CI_BUILD_REF_NAME: $CI_COMMIT_REF_NAME
    DUNECI_TEST_LABELS: ""
  trigger:
    project: infrastructure/dune-nightly-test
    branch: core
    strategy: depend
  allow_failure: true
